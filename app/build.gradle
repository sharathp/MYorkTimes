apply plugin: 'com.android.application'
apply plugin: 'android-apt'

apply plugin: 'me.tatarka.retrolambda'

ext {
    APPCOMPAT_VERSION = "23.4.0"
    JUNIT_VERSION = "4.12"
    RETROFIT_VERSION = "2.1.0"
    GLIDE_VERSION = "3.7.0"
    BUTTERKNIFE_VERSION = "8.2.1"
    GSON_VERSION = "2.7"
    DAGGER_VERSION = "2.4"
    JAVA_POET_VERSION = "1.7.0"
    PARCELER_VERSION = "1.1.5"
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    dataBinding.enabled = true

    defaultConfig {
        applicationId "com.sharathp.myorktimes"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    String apiKey = getApiKey('NYTimesApiToken')

    buildTypes.each {
        it.buildConfigField 'String', 'NYTIMES_API_TOKEN', apiKey
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // provided 'org.glassfish:javax.annotation:10.0-b28'

    compile "com.android.support:appcompat-v7:$APPCOMPAT_VERSION"
    compile "com.android.support:recyclerview-v7:$APPCOMPAT_VERSION"
    compile "com.android.support:cardview-v7:$APPCOMPAT_VERSION"
    compile "com.android.support:percent:$APPCOMPAT_VERSION"
    compile "com.android.support:design:$APPCOMPAT_VERSION"
    compile "com.android.support:support-v4:$APPCOMPAT_VERSION"

    apt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    compile "com.google.dagger:dagger:$DAGGER_VERSION"

    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"

    apt "org.parceler:parceler:$PARCELER_VERSION"
    compile "org.parceler:parceler-api:$PARCELER_VERSION"

    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    apt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"
    compile "com.google.code.gson:gson:$GSON_VERSION"
    compile "com.github.bumptech.glide:glide:$GLIDE_VERSION"

    testCompile "junit:junit:$JUNIT_VERSION"
}

def getApiKey(String keyName){
    def Properties props = new Properties()
    props.load(project.rootProject.file('local.properties').newDataInputStream())
    return props[keyName]
}